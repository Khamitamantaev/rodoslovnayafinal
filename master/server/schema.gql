# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Message {
  body: String!
  sent: String!
}

type User {
  _id: ID!
  leftchildID: User!
  rightchildID: User!
  email: String
  name: String!
  permalink: String!
  active: Boolean!
  githubId: String!
  redditId: String!
  avatar: String
  bio: String
  ancestors: [User!]!
  role: Roles!
}

enum Roles {
  USER
  ADMIN
}

type Tree {
  _id: ID!
  name: String!
  rootUser: String!
  branches: [String!]!
}

type Query {
  users: [User!]!
  findAllAncestors: [User!]!
  me: User
  user(input: GetUserInput!): User
  gitHubAuth(input: SocialAuthInput!): User!
  redditAuth(input: SocialAuthInput!): User!
  googleAuth(input: SocialAuthInput!): User!
  getGoogleAuthURL: String!
  tree(id: Int!): Tree!
}

input GetUserInput {
  userPermalink: String!
}

input SocialAuthInput {
  code: String
}

type Mutation {
  updateUser(input: UpdateUserInput!): User!
  createUser(input: CreateUserInput!): User!
  logout: User
  sendMessage(input: SendMessageInput!): Message!
  createTree(createTreeInput: CreateTreeInput!): Tree!
  updateTree(updateTreeInput: UpdateTreeInput!): Tree!
  removeTree(id: Int!): Tree!
}

input UpdateUserInput {
  email: String
  name: String
  bio: String
}

input CreateUserInput {
  email: String
  name: String
  bio: String
}

input SendMessageInput {
  body: String!
}

input CreateTreeInput {
  name: String
  rootUser: String
}

input UpdateTreeInput {
  id: Int!
}

type Subscription {
  userAdded: [User!]!
  newMessage: Message!
}
