CLIENT_BASE_URL=http://localhost:5000/graphql
WEBSOCKET_API_URL=ws://localhost:5000/graphql
GA_ID=GA-
SENTRY_DSN=https://examplePublicKey@o0.ingest.sentry.io/0
BROWSER_API_ENDPOINT=http://localhost:5000/graphql
GITHUB_CLIENT_ID=3a2a17106e5ddaa841f4
CLIENT_DOMAIN=http://localhost:3000
REDDIT_CLIENT_ID=


FROM node:14-alpine

ADD package.json /tmp/package.json

RUN rm -rf dist

RUN cd /tmp && npm install -q

RUN npm dedupe

# Code base
ADD ./ /src
RUN rm -rf /src/node_modules && cp -a /tmp/node_modules /src/

# Define working directory
WORKDIR /src

RUN npm run-script build

RUN npm install pm2 -g

EXPOSE 5000

CMD ["pm2-runtime", "process.json"]





version: '3.7'
services:
  starter-server:
    container_name: starter-server
    environment: 
      - NODE_ENV=production
    env_file:
      - .env
    build:
      context: ./
    image: starter-server
    ports:
     - 5000:5000
    networks:
      - app-network 
  mongodb:
    image : mongo:latest
    container_name: mongodb
    volumes:
      - ./database:/data/db
    ports:
      - 27017:27017
    networks:
      - app-network
    restart: always
  
networks:
  app-network:
    external: true








RUN mkdir -p /usr/src/app
ENV PORT 3000

WORKDIR /usr/src/app

COPY package.json /usr/src/app
COPY yarn.lock /usr/src/app

# Production use node instead of root
# USER node

RUN yarn install --production

COPY . /usr/src/app

RUN yarn build

EXPOSE 3000
CMD [ "yarn", "start" ]




FROM node:12-alpine

# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# Installing dependencies
COPY package*.json /usr/src/app/
RUN npm install

# Copying source files
COPY . /usr/src/app

# Building app
RUN npm run build

EXPOSE 3000
# Running the app
CMD [ "npm", "start" ]